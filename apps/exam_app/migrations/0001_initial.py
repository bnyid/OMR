# Generated by Django 5.1.3 on 2024-12-29 13:57

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ExamSheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='시험명')),
                ('total_questions', models.IntegerField(verbose_name='총 문항수')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
            ],
            options={
                'verbose_name': '시험지',
                'verbose_name_plural': '시험지들',
            },
        ),
        migrations.CreateModel(
            name='OriginalText',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_source', models.CharField(blank=True, max_length=200, null=True, verbose_name='원문 출처')),
                ('text_type', models.CharField(choices=[('TB', '교과서'), ('ET', '모의고사'), ('EX', '외부지문')], max_length=2, verbose_name='원문 유형')),
                ('content', models.TextField(verbose_name='본문')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
            ],
            options={
                'verbose_name': '지문 원문',
                'verbose_name_plural': '지문 원문들',
            },
        ),
        migrations.CreateModel(
            name='Passage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passage_serial', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='지문 일련번호')),
                ('passage_source', models.CharField(blank=True, help_text='원본을 명시하고 싶을 경우.', max_length=200, null=True, verbose_name='지문출처')),
                ('passage_text', models.TextField(blank=True, null=True, verbose_name='지문 내용')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
            ],
        ),
        migrations.CreateModel(
            name='ExamSheetQuestionMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_number', models.IntegerField(verbose_name='OMR 채점번호')),
                ('order_number', models.IntegerField(null=True, verbose_name='시험지상 출제순서')),
                ('exam_sheet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exam_app.examsheet')),
            ],
            options={
                'verbose_name': '시험지-문제 매핑',
                'verbose_name_plural': '시험지-문제 매핑들',
            },
        ),
        migrations.CreateModel(
            name='ExamText',
            fields=[
                ('originaltext_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='exam_app.originaltext')),
                ('grade', models.IntegerField(verbose_name='학년')),
                ('year', models.IntegerField(verbose_name='년도')),
                ('month', models.IntegerField(verbose_name='시행월')),
                ('question_number', models.IntegerField(verbose_name='문항번호')),
            ],
            bases=('exam_app.originaltext',),
        ),
        migrations.CreateModel(
            name='ExternalText',
            fields=[
                ('originaltext_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='exam_app.originaltext')),
                ('category1', models.CharField(max_length=100, verbose_name='구분1')),
                ('category2', models.CharField(max_length=100, verbose_name='구분2')),
            ],
            bases=('exam_app.originaltext',),
        ),
        migrations.CreateModel(
            name='TextbookText',
            fields=[
                ('originaltext_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='exam_app.originaltext')),
                ('subject', models.CharField(max_length=50, verbose_name='과목')),
                ('publisher', models.CharField(max_length=100, verbose_name='출판사')),
                ('chapter', models.CharField(max_length=50, verbose_name='과')),
                ('text_number', models.CharField(max_length=50, verbose_name='본문번호')),
            ],
            bases=('exam_app.originaltext',),
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('detail_type', models.CharField(blank=True, choices=[('객관식_어법', '객관식_어법'), ('논술형_어법', '논술형_어법'), ('순서배열', '순서배열'), ('문장삽입', '문장삽입'), ('제목', '제목'), ('주제', '주제'), ('요약문', '요약문'), ('빈칸추론', '빈칸추론'), ('함축의미', '함축의미'), ('문맥어휘', '문맥어휘'), ('영영풀이', '영영풀이')], max_length=20, null=True, verbose_name='상세유형')),
                ('answer', models.JSONField(blank=True, null=True, verbose_name='정답')),
                ('question_text', models.TextField(default='', verbose_name='발문')),
                ('question_text_extra', models.TextField(blank=True, null=True, verbose_name='발문 추가 내용(HTML)')),
                ('is_essay', models.BooleanField(default=False, verbose_name='논술형 여부')),
                ('explanation', models.TextField(verbose_name='해설')),
                ('answer_format', models.TextField(blank=True, null=True, verbose_name='답안형식')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
                ('category', models.CharField(blank=True, choices=[('단어', '단어'), ('어법', '어법'), ('독해', '독해'), ('논술형', '논술형')], max_length=10, null=True, verbose_name='구분')),
                ('evaluation_area', models.CharField(blank=True, choices=[('어법 이해', '어법 이해'), ('글의_흐름_파악', '글의_흐름_파악'), ('핵심_내용', '핵심_내용'), ('논리적_추론', '논리적_추론'), ('단어', '단어')], max_length=20, null=True, verbose_name='평가영역')),
                ('exam_sheets', models.ManyToManyField(related_name='questions', through='exam_app.ExamSheetQuestionMapping', to='exam_app.examsheet')),
                ('passage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='exam_app.passage', verbose_name='연결된 지문')),
            ],
            options={
                'verbose_name': '문제',
                'verbose_name_plural': '문제들',
            },
        ),
        migrations.AddField(
            model_name='examsheetquestionmapping',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exam_app.question'),
        ),
        migrations.AlterUniqueTogether(
            name='examsheetquestionmapping',
            unique_together={('exam_sheet', 'order_number')},
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice_number', models.IntegerField(verbose_name='보기 번호')),
                ('text_content', models.TextField(verbose_name='보기 내용')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='exam_app.question')),
            ],
            options={
                'verbose_name': '보기',
                'verbose_name_plural': '보기들',
                'ordering': ['choice_number'],
                'unique_together': {('question', 'choice_number')},
            },
        ),
    ]
