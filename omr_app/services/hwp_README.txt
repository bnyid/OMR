# 시험지 업로드 프로세스
#
### GOT IT -  문항의 채점과정과, 문제 등록 과정을 분리하면 된다.
#
#### 문제 등록 과정 (일단 먼저, 두개짜리 문제인지, 한개짜리 문제인지 구분해야 한다)
# (0) $표시가 있는 경우 등록할 필요가 없는 문제기 때문에 문제 등록에서 제외한다.
# (1) DocBegin에서 #을 검색하고, 2개짜리 문제인지, 1개짜리 문제인지 파악한다.
#      if 1개짜리 문제라면, 
#           if 객관식이라면,
#                (ㄱ) 문항 출처, 유형 추출
#                     : #문단에서 문항 출처, 유형 추출한 뒤 발문으로 이동
#                (ㄴ) 발문 추출
#                     : 발문 Para의  Begin부터 미주전까지 발문으로 저장
#                (ㄷ) 정답, 해설 추출
#                   (a) 미주 입장 -> 정답 추출(가장 먼저 나오는 문자를 추출)
#                   (b) 미주 전체 블록 -> 해설 추출
#                (ㄹ) 지문 추출(+ 테이블 추출)
#                   (a) 발문의 ParaEnd로 이동하고 아무개 문자 검색으로 (지문 시작점) 좌표저장
#                   (b) 원문자 1번으로 이동하고 ParaBegin의 좌표를 저장함 (choice 시작점)
#                        - 지문 시작점부터 choice 시작점까지 블록설정 후 표의 갯수 파악
#                           if 표가 1개인 경우,
#                               0) 표 시작점 부터 지문 시작점까지를 블록하여 지문으로 저장
#                               1) 해당 표에 진입한 후 아무개 문자 검색으로 해당 para를 select하고 table_type을 추출
#                               2) ParaEnd로 이동하고, 아무개 문자 검색으로 표에서 content 추출
#                           elif 표가 2개인 경우,
#                               0)    ->    1) + 2)를 반복문 수행
#                               
#                           else 표가 없다면, 
#                               1) 지문 시작점부터 choice 시작점까지를 블록 설정 하여 지문으로 저장
#                     
#                (ㅁ) 선지 추출
#                   : 원문자 n번 뒤부터 원문자 (n+1)번 앞까지 n번 choice로 저장
#
#           if 논술이라면,
#                (ㄱ) 문항 출처, 유형 추출
#                     : #문단에서 문항 출처, 유형 추출한 뒤 다음 Para(=발문) 이동
#                (ㄴ) 발문 추출
#                   (a) 발문 para를 발문으로 추출 (이 때 만약 [x점]이 para에 포함되어 있다면) ParaBegin부터 "[" 전까지 발문 추출
#                   (b) 발문 ParaEnd로 이동하여 발문 끝 좌표 추출(=지문 시작점)
#                (ㄷ) 정답 추출
#                   (a) hwp.GetHEadString()으로 논술형 번호 추출 -> (d) 문서 끝으로 이동한 뒤 논술형 번호로 "위로 찾기"
#                   (b) ParaBegin으로 이동하고 "]"로 검색하고 escape 2번 (논술형 정답 시작점)
#                   (c) "[논" 과 "[객" 중 빠른것 찾기로 이동 -> 위로 아무개 찾기 (논술형 정답 끝점)
#                (ㄹ) 지문 추출 (+table 추출)
#                   (a) 지문 시작점 좌표로 이동 후, "[답안" 찾기로 이동하여 좌표 추출 (=답안 작성란 시작점)
#                   (b) 지문 시작점부터 답안 시작점까지 블록 설정 후 표의 갯수 파악
#                       if 표가 1개인 경우,
#                               0) 표 시작점 부터 지문 시작점까지를 블록하여 지문으로 저장
#                               1) 해당 표에 진입한 후 아무개 문자 검색으로 해당 para를 select하고 table_type을 추출
#                               2) ParaEnd로 이동하고, 아무개 문자 검색으로 표에서 content 추출
#                       elif 표가 2개인 경우,
#                               0)    ->    1) + 2)를 반복문 수행                               
#                       else 표가 없다면, 
#                               1) 지문 시작점부터 choice 시작점까지를 블록 설정 하여 지문으로 저장
#                 (ㅁ) 답안 작성란 추출
#                    (a) # 검색 이후 ParaBegin 이동, 위로 아무개 찾기 하여 답안 작성란 끝점 추출
#
#
#
#      if 2개짜리 문제라면, is_double_question = True로 설정하고,
#          ## 첫번 째 문제 추출(무조건 객관식)
#           (ㄱ) 원문 출처, 유형, 논술형 포함 여부 판단, 라벨 추출
#               (a) #인덱스Para에서 원문 출처 추출
#               (b) #인덱스Para에서 콤마(comma)로 스플릿하여 2개의 문자열로 구분하고, 유형의 종류를 각각 저장한다.
#               (c) ]를 검색하여 라벨을 추출, 다시 para의 끝으로 이동한 뒤 아무개 문자 검색으로 지문 시작점 좌표 저장.
#           (ㄴ) 지문 추출, 발문1 추출
#               (d) 문단번호 찾기 검색으로 첫번째 발문으로 이동 + 발문 추출 + ParaBegin 하여 지문 끝점 추출
#           (ㄷ) 보기 추출 (테이블추출)
#                  (a) 원문자 1번 검색으로 보기 시작점 좌표 저장
#                  (b) 발문 끝점부터 보기 시작점까지 블록 설정 후 표가 있는지 검사
#                       if 표가 1개인 경우,
#                               1) 해당 표에 진입한 후 아무개 문자 검색으로 해당 para를 select하고 table_type을 추출
#                               2) ParaEnd로 이동하고, 아무개 문자 검색으로 표에서 content 추출
#                       elif 표가 2개인 경우,
#                               0)    ->    1) + 2)를 반복문 수행                               
#
#                  (c) 원문자 1번 검색으로 차례대로 보기 저장
#          ## 두 번째 문제 추출(객관식 or 주관식)
#              (ㄱ) 발문2 추출
#                  :문단번호 찾기로 이동하여 발문2를 추출 + 발문 끝점 추출
#              (ㄴ) 보기 추출 (테이블추출)
#                (a) 원문자 1번 검색(if 주관식 : "[답안" 검색)으로 보기 시작점 좌표 저장
#                (b) 발문 끝점부터 보기 시작점까지 블록 설정 후 표가 있는지 검사
#                     if 표가 1개인 경우,
#                             1) 해당 표에 진입한 후 아무개 문자 검색으로 해당 para를 select하고 table_type을 추출
#                             2) ParaEnd로 이동하고, 아무개 문자 검색으로 표에서 content 추출
#                     elif 표가 2개인 경우,
#                             0)    ->    1) + 2)를 반복문 수행                                       
#                (c) if 객관식   : 원문자 1번으로 차례대로 보기 저장.
#                    elif 주관식 : 답안 작성란 저장
#               
#            
#
####### 문항 채점 과정
# (1) 객관식 문단번호 스타일을 찾아가 원문 출처, 총 문항 수, 배점, 정답 번호를 구하고 문항 번호를 부여한다.
# (2) 주관식 문단번호 스타일을 찾아 발문, 배점을 구하고 발문 좌표 저장
# (3) 발문에서 GetHEadString()으로 논술형 번호 추출 -> 문서 끝으로 이동한 뒤 논술형 번호로 "위로 찾기"
# (4) 논술형 정답을 추출하고 다시 발문 좌표로 이동
#
#
#
#
#
#
#
#
#
#
#
#
## 시험지 출제 규칙
## (1) 모든 문제유형을 막론하고 가장 상단에는 #이 위치한다. 만약 2개짜리 문제라면 ## 으로 두개 표시한다.
## (2) 한개짜리 문제는 #인덱스 -> 발문 -> 지문 -> 보기 의 순서로 구성한다.
## (3) 두개짜리 문제는 #인덱스 -> [3,4] 다음글을 읽고 물음에 답하시오 -> 지문 -> 발문1 -> 보기1 -> 발문2 -> 보기2로 구성한다.
## (4) 객관식 문제는 반드시 미주로 정답을 표시해야 하며, 미주의 가장 첫번째에 오는 문자가 정답을 나타내야 한다.
## (6) 지문의 중간에 보기가 있어서는 안된다. 원문자 1,2,3,4,5는 반드시 지문다 끝난 뒤에 와야한다. 지문 내에서 원문자가 필요할경우 알파벳 원문자나 한글 원문자를 사용한다.
## (7) 보기의 원문자는 반드시 정해진 원문자를 사용해야 한다.
## (8) 빈칸을 만들 때는, 폰트를 하얀색으로 바꾸는 것이 아니라 언더바를 사용해야한다 ex. it seems __________.
## (9) 논술형의 답안 작성란에는 반드시 [답안] 이라는 문자열이 있어야 한다.